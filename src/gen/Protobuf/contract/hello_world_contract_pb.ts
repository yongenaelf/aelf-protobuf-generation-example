// @generated by protoc-gen-es v1.7.1 with parameter "target=ts"
// @generated from file Protobuf/contract/hello_world_contract.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * An event that will be emitted from contract method call
 *
 * @generated from message UpdatedMessage
 */
export class UpdatedMessage extends Message<UpdatedMessage> {
  /**
   * @generated from field: string value = 1;
   */
  value = "";

  constructor(data?: PartialMessage<UpdatedMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "UpdatedMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatedMessage {
    return new UpdatedMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatedMessage {
    return new UpdatedMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatedMessage {
    return new UpdatedMessage().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatedMessage | PlainMessage<UpdatedMessage> | undefined, b: UpdatedMessage | PlainMessage<UpdatedMessage> | undefined): boolean {
    return proto3.util.equals(UpdatedMessage, a, b);
  }
}

